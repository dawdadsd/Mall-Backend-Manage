<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 1. 项目坐标 -->
    <groupId>com.mall</groupId> <!-- 使用子模块中常见的 groupId -->
    <artifactId>mall-backed-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version> <!-- 使用子模块中常见的 version -->
    <packaging>pom</packaging>

    <name>mall-backed-parent</name>
    <description>商城后端父模块 - 统一依赖管理</description>

    <!-- 2. 统一版本管理 -->
    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Framework & Libraries Versions -->
        <spring-boot.version>3.4.4</spring-boot.version> <!-- 标准化为最新公共版本 -->
        <spring-cloud.version>2024.0.0</spring-cloud.version> <!-- from auth_service_new -->
        <spring-cloud-alibaba-discovery.version>2023.0.1.0</spring-cloud-alibaba-discovery.version> <!-- from auth_service_new -->
        <lombok.version>1.18.36</lombok.version> <!-- 标准化为 ListingService 的较新版本 -->
        <mysql.connector.version>8.0.33</mysql.connector.version> <!-- 明确指定一个版本 -->
        <jjwt.version>0.12.3</jjwt.version> <!-- from auth_service_new -->
        <jakarta.xml.bind-api.version>3.0.1</jakarta.xml.bind-api.version> <!-- from auth_service_new -->
        <jaxb-runtime.version>3.0.2</jaxb-runtime.version> <!-- from auth_service_new -->
        <springdoc.version>2.7.0</springdoc.version> <!-- Updated from 2.4.0 -->
        <commons-io.version>2.14.0</commons-io.version> <!-- 标准化为 ListingService 的较新版本 -->
        <commons-lang3.version>3.14.0</commons-lang3.version> <!-- from common_moudle -->
        <guava.version>32.0.1-android</guava.version> <!-- from ListingService -->
        <nacos.client.version>2.3.0</nacos.client.version> <!-- from auth_service_new -->
        <seata.version>1.6.0</seata.version> <!-- from auth_service_new -->
        <gson.version>2.10.1</gson.version> <!-- from clean_moudle -->
        <jakarta-servlet.version>6.0.0</jakarta-servlet.version> <!-- 新增：Servlet API 版本 -->
        <minlog.version>1.3.0</minlog.version> <!-- 新增：Minlog 版本 -->

        <!-- clean_moudle Specific Versions (管理在此处，但仅 clean_moudle 会引入) -->
        <slf4j.version>2.0.9</slf4j.version>
        <spark.version>3.5.0</spark.version>
        <scala.version>2.12</scala.version>
        <scala.binary.version>2.12.18</scala.binary.version>
        <delta.version>2.4.0</delta.version>
        <hadoop.version>3.3.4</hadoop.version>
        <lz4.version>1.8.0</lz4.version>
        <juniversalchardet.version>1.0.3</juniversalchardet.version>
        <commons-cli.version>1.5.0</commons-cli.version>
        <jersey.version>3.1.3</jersey.version> <!-- from clean_moudle -->
        <antlr4.runtime.version>4.13.1</antlr4.runtime.version> <!-- 重新添加并使用兼容版本 -->

        <!-- Maven Plugin Versions -->
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version> <!-- from ListingService -->
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version> <!-- from clean_moudle -->
        <launch4j-maven-plugin.version>2.4.1</launch4j-maven-plugin.version> <!-- from clean_moudle -->
    </properties>

    <!-- 3. 依赖管理 (定义版本，子模块按需引入，无需指定版本) -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud BOM -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Nacos Discovery (Spring Cloud Alibaba part, manage version explicitly for clarity) -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${spring-cloud-alibaba-discovery.version}</version>
            </dependency>

            <!-- MySQL Connector -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.connector.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope> <!-- 通常设为 provided -->
            </dependency>

            <!-- Common Module -->
            <dependency>
                <groupId>com.mall</groupId>
                <artifactId>common_moudle</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- JWT -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- API Documentation -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- Commons Libs -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- Guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- Seata -->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <!-- Nacos Client (Needed by Seata for config) -->
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos.client.version}</version>
            </dependency>

            <!-- Gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <!-- Jakarta Servlet API -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta-servlet.version}</version>
                <scope>provided</scope> <!-- 通常由容器提供 -->
            </dependency>

            <!-- Minlog -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>minlog</artifactId>
                <version>${minlog.version}</version>
            </dependency>

            <!-- clean_moudle Specific Dependency Management -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.binary.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-yarn_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>com.crealytics</groupId>
                <artifactId>spark-excel_${scala.version}</artifactId>
                <version>0.14.0</version> <!-- Specific version from clean_moudle -->
            </dependency>
            <dependency>
                <groupId>io.delta</groupId>
                <artifactId>delta-core_${scala.version}</artifactId>
                <version>${delta.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lz4</groupId>
                <artifactId>lz4-java</artifactId>
                <version>${lz4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.juniversalchardet</groupId>
                <artifactId>juniversalchardet</artifactId>
                <version>${juniversalchardet.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>
            <!-- 移除对 antlr4-runtime 的版本管理 -->
            <!--
            <dependency>
               <groupId>org.antlr</groupId>
               <artifactId>antlr4-runtime</artifactId>
               <version>${antlr4.runtime.version}</version>
           </dependency>
           -->
            <!-- Add other specific dependencies from clean_moudle if needed -->

            <!-- Spring Cloud Gateway -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <!-- Version managed by Spring Cloud BOM -->
                <version>${spring-cloud.version}</version> <!-- 显式添加版本 -->
            </dependency>

            <!-- 重新添加对 antlr4-runtime 的版本管理 -->
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>${antlr4.runtime.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 4. 通用依赖 (所有子模块默认继承) -->
    <dependencies>
        <!-- Lombok (Scope is managed in dependencyManagement) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- Spring Boot Starter Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 5. 插件管理 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- Spring Boot Maven 插件 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <!-- Common exclusion for Lombok -->
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Maven 编译器插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <!-- Annotation processor path for Lombok -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!-- Maven 资源插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- Lombok Maven 插件 (from ListingService) -->
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${lombok-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>delombok</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Assembly Plugin (from clean_moudle) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <!-- Configuration might be too specific, manage here or in child -->
                </plugin>
                <!-- Launch4j Plugin (from clean_moudle) -->
                <plugin>
                    <groupId>com.akathist.maven.plugins.launch4j</groupId>
                    <artifactId>launch4j-maven-plugin</artifactId>
                    <version>${launch4j-maven-plugin.version}</version>
                    <!-- Configuration is highly specific, better managed in child -->
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- 可以在这里配置所有模块都需要的插件 -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <!-- Apply Spring Boot plugin to all modules by default (can be overridden in child) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- 6. 模块组织 (根据您的目录结构和分析) -->
    <modules>
        <module>listing-plateform</module>
    </modules>

    <!-- 7. 仓库配置 (从子模块合并) -->
    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>aliyun</id>
            <url>https://maven.aliyun.com/repository/public</url>
        </repository>
        <!-- From clean_moudle -->
        <repository>
            <id>spark-packages</id>
            <url>https://repos.spark-packages.org/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
            <id>aliyun-plugin</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases><enabled>true</enabled></releases>
            <snapshots><enabled>false</enabled></snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>